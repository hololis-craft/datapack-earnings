##############################################################################
#  注意: このファイル内のすべてのメッセージはカラーコードでカスタマイズできます     #
#          これには、1.16で追加されたHEXカラーコードも含まれます           #
#                  HEXカラーの例: &#ff0000 = 赤                      #
##############################################################################

# {prefix} プレースホルダーを置き換えます
prefix: "&eSimplePets &6>>"

# 権限が必要な場合にプレイヤーが権限を持っていないときに送信されるメッセージ
no_permission: "{prefix} &c権限がありません。"

# このメッセージは、プレイヤーがアンロックしたペットがなく、「Needs-Pet-Permission-for-GUI」がTRUEの場合にのみ使用されます
no_pets_unlocked: "{prefix} &cアンロック済みのペットがいません。"
summon:
  # ペットが「/pet summon all」で召喚されたときに送信されるメッセージ（主にOPが見せびらかすため）
  all_pets: "{prefix} &7{count}体のペットを正常に召喚しました！"
  # ペットが「/pet summon」で召喚されたときに送信されるメッセージ
  pet: "{prefix} &7{type}ペットを正常に召喚しました！"
  # プレイヤーが許可されている以上のペットを召喚しようとしたときに送信されるメッセージ
  cant_spawn_more_pets: "{prefix} &cこれ以上ペットを召喚できません！"
  # ペットが「/pet summon」で召喚されたときに送信されるメッセージ
  failed: "{prefix} &c申し訳ありません、現在{type}ペットを召喚できませんでした。"
# ペットが「/pet summon」で召喚されたときに送信されるメッセージ
pet_type:
  # ペットの種類が指定されていない
  missing: "{prefix} &cペットの種類が指定されていません。"
  # 入力が有効なペットではない（スペルミス？）
  invalid: "{prefix} &c申し訳ありません、&7'{arg}'&cは有効なペットの種類ではありません。"
  # 選択されたペットは、あなたのバージョンのSimplePetsでは開発中です
  # つまり、まだ作業中であり、問題が予想されます
  in_development: "{prefix} &c申し訳ありません、{type}は現在開発中であり、使用できません。"
  # 選択されたペットはサーバーのバージョンでサポートされていません
  # （または、jarファイルに存在しない [変更された場合]）
  not_registered: "{prefix} &c申し訳ありません、{type}は登録されていません。"
nbt:
  # 「nbtエラーメッセージ」の前に表示されるメッセージ
  invalid: "{prefix} &c無効なNBTが入力されました。"
  # ペットが「/pet summon」で召喚されたときに送信されるメッセージ
  error: "{prefix} &c{message}"

# ペットが「/pet summon」で召喚されたときに送信されるメッセージ
player_not_online: "{prefix} &c{player}はオンラインではありません（スペルミス？）"
remove:
  # ペットが「/pet remove」で削除されたときに送信されるメッセージ
  removed_pet: "{prefix} &7{type}ペットを正常に削除しました！"
  # ペットが「/pet remove all」で削除されたときに送信されるメッセージ
  all_pets: "{prefix} &7{count}体のペットを正常に削除しました！"
  # 削除しようとしたペットが召喚されていない場合に送信されるメッセージ
  not_spawned: "{prefix} &c申し訳ありません、{type}は召喚されていません。"
modify:
  # プレイヤーがペットのデータに設定した内容を含むメッセージ
  # 送信しないようにするには、これを空の文字列 "" に設定します
  compound: "{prefix} &7NBTコンパウンド: &e{compound}"
  # コンパウンドがエンティティに適用されたときに送信されるメッセージ
  applied: "{prefix} &7データが{type}ペットに適用されました！"
pet-saves:
  # プレイヤーがいずれかのペットタイプでグローバルな保存上限に達したときに送信されるメッセージ
  limit-reached: "{prefix} &cペットの保存上限に達しました"
  # プレイヤーがペットタイプごとの保存上限に達したときに送信されるメッセージ
  limit-reached-per-type: "{prefix} &c{type}ペットの保存上限に達しました"
purchased:
  # ペットがプレイヤーの購入済みリストに追加されたときに送信されるメッセージ（「/pets purchased add」経由）
  added: "{prefix} &7{type}が&c{player}&7の購入済みペットに追加されました"
  # ペットがプレイヤーの購入済みリストから削除されたときに送信されるメッセージ（「/pets purchased remove」経由）
  removed: "{prefix} &7{type}が&c{player}&7の購入済みペットから削除されました"
  # ペットがリスト表示される前に送信されるメッセージ（「/pets purchased list」経由）
  list_prefix: "{prefix} &7所有ペット: "
rename:
  # プレイヤーがチャットでペットの名前を変更するときに送信されるメッセージ
  via_chat: "{prefix} &7チャットにペットの新しい名前を入力してください:"
  # プレイヤーがペットの名前の変更をキャンセルしたときに送信されるメッセージ
  cancel: "{prefix} &cペットの名前の変更がキャンセルされました"
  anvil:
    # ペットの名前変更用金床GUIのタイトル
    title: "&#de9790[] &#b35349ペットの名前を変更"
    # 金床GUI内のNAME_TAGの名前
    tag_name: "&#de9T90新しい名前"
  sign:
    # 看板に設定されるテキスト
    #   - 1行は、プレイヤーがペットの名前を入力する行を示すために{input}を含む必要があります
    #   - このためにはHexカラーは使用できません
    #   - 4行である必要があります
    lines:
      - "{input}"
      - "&l^^^^^^^^"
      - "&9&l入力してください"
      - "&9&lペットの名前"
admin:
  regenerate:
    # petsフォルダがリセットされたときに送信されるメッセージ
    pets: "{prefix} &7Petsフォルダがデフォルトファイルに再生成されました。"
    # inventoriesフォルダがリセットされたときに送信されるメッセージ
    inventories: "{prefix} &7Inventoriesフォルダがデフォルトファイルに再生成されました。"
    # itemsフォルダがリセットされたときに送信されるメッセージ
    items: "{prefix} &7Itemsフォルダがデフォルトファイルに再生成されました。"
    # particlesフォルダがリセットされたときに送信されるメッセージ
    particles: "{prefix} &7Particlesフォルダがデフォルトファイルに再生成されました。"
    # 選択されたペットファイルがリセットされたときに送信されるメッセージ
    pet_type: "{prefix} &7{type}ペットのファイルがデフォルトファイルにリセットされました。"
  reload:
    # メイン設定がリロードされたときに送信されるメッセージ
    config: "{prefix} &7プラグインの設定がリロードされました！"
    # メッセージ設定がリロードされたときに送信されるメッセージ
    messages: "{prefix} &7プラグインのメッセージ設定がリロードされました！"
    # インベントリマネージャーがリロードされたときに送信されるメッセージ
    inventories: "{prefix} &7アイテムとインベントリがリロードされました！"
    # パーティクルマネージャーがリロードされたときに送信されるメッセージ
    particles: "{prefix} &7パーティクルがリロードされました！"
    # ペットマネージャーがリロードされたときに送信されるメッセージ
    pets: "{prefix} &7ペットがリロードされました！"
    # すべてのプラグイン要素がリロードされたときに送信されるメッセージ
    all: "{prefix} &7すべてのプラグイン要素がリロードされました！"
  pet-config:
    # 入力されたキーが選択されたペットのjsonファイルにない
    unknown-key: "{prefix} &7{key}&cはペットのjsonファイルのキーではありません。"
    # 入力された値がブール値ではない（つまりtrueまたはfalseではない）
    invalid-boolean: "{prefix} &7{value}&cは有効なブール値ではありません。true/falseを使用してください"
    # 入力された値が有効な整数ではない（1,2,3）
    invalid-integer: "{prefix} &7{value}&cは有効な整数ではありません。"
    # 入力された値が有効なdoubleではない（0.1, 0.02, 0.003）
    invalid-double: "{prefix} &7{value}&cは有効なdoubleではありません。"
    # 入力されたキーはコマンドで更新できない（おそらく配列またはオブジェクト）
    unable-to-update: "{prefix} &cこのキーは更新できません。"
    # キーが新しい値で更新された
    #
    # プレースホルダー:
    # {key} - ターゲットキー
    # {value} - 新しい値
    # {type} - 選択されたペットの種類
    value-set: "{prefix} &a{key}&7が&e{value}&7に設定されました"
    # キーがデフォルト値にリセットされた
    #
    # プレースホルダー:
    # {key} - ターゲットキー
    # {value} - 新しい値
    # {type} - 選択されたペットの種類
    value-reset: "{prefix} &a{key}&7がデフォルト値にリセットされました"
